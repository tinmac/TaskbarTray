Notes ✓ ∴ 
=====


Todo
----

Log Settings file path in LocalSettingsService

Get the persistance layer working properly

At the moment we have LocalSettingsService and SettingsService layers, why are there two?

OK so if we leave it as two, shouldnt we only be calling LocalSettingsService from SettingsService?

can you remove any calls to _localSettingsService ie in TrayIconVM, 

its confusing so can we 
1 - re-write into one service 

2 - current methods we can call are:
- SaveThemeInSettingsAsync(ElementTheme theme)
- GetWindowDataAsync()
Can we add new methods, for example:
- Save any property for example: TemperatureUnit, ShowIntroScreen, etc.
- Load any property for example: TemperatureUnit, ShowIntroScreen, etc.
At the moment the SettignsService uses


At the mo you are creating the three system plans (Power Saver, Balanced, High Performance) but
what if the user creates a new power plan in Windows control panel, the app should add it to the plans List & show it in the context Ui for user to select.



Extra Features
--------------

Can you create a WinUI page (c# & xaml ui) that does the following:

The top of the page show readonly sytem sensors for:  
- Temperature sensor levels (CPU etc...)
- Any fans and their speed

Next create c#/ui where the user can select and edit Windows 11 power plans (power saver, balanced and high performance) and also create a new custom power plan. 

Instead of Powershell can you use Win32 api's for example PowerReadDCValueIndex PowerWriteDCValueIndex 

The attributes to edit/create are:

Battery:
Critical Battery Level: On Battery (Percent)
Critical Battery Level: Plugged In (Percent)
Critical Battery Notification: On Battery (On/Off)
Critical Battery Notification: Plugged In (On/Off)
Critical Battery Action: On Battery (Sleep, Hibernate, Shutdown)
Critical Battery Action: Plugged In (Sleep, Hibernate, Shutdown)

And duplicate for `Low Battery Level`

Reserve Battery Level
On Battery (Percent)
Plugged In (Percent)

Display:
Turn off display: On Battey (mins)
Turn off disply: Plugged In (mins)

Sleep:
Sleep after: On Battery (mins) 
Sleep after: Plugged In (mins)
Hibernate after: On Battery (mins) 
Hibernate after: Plugged In (mins)

Processor Power Management:
Minimum Processor state: On Battery (percent) 
Minimum Processor state: Plugged In (percent)
Maximum Processor state: On Battery (percent)
Minimum Processor state: Plugged In (percent)
 
Processor Specific optional settings:
Detect if Users Machine has AMD, if yes show these settings:
AMD Graphics Powerplay Settings:
On Battery (Optemise Battery)
Plugged In (Optemise Performance)

AMD Power Slider Overlay:
On Battery (Battery Aver, Better Battery, Better Performance, Best Performance) 
Plugged In (Battery Aver, Better Battery, Better Performance, Best Performance)

Show any other AMD sepcific settings that can be read/written

Likewise Detect if Users Machine has Intel, if yes show Intel specific settings whatever they are





Links
-----

Docs:
https://learn.microsoft.com/en-us/windows-hardware/customize/power-settings/configure-power-settings

Win32 Api - powrprof.h
https://learn.microsoft.com/en-us/windows/win32/api/powrprof/

Attributes: 
https://learn.microsoft.com/en-us/windows/win32/api/powrprof/nf-powrprof-powerreadsettingattributes




Instlling the Service
=====================
Installing from PowerScript

Set-ExecutionPolicy Bypass -Scope Process -Force

Get-Service -Name PowerSwitchService
Start-Service -Name PowerSwitchService
Stop-Service -Name PowerSwitchService
sc.exe delete "PowerSwitchService"



sc.exe config PowerSwitchService obj= LocalSystem
Restart-Service -Name PowerSwitchService



Install manually in PS 
- Open PS as Admin in the folde where install-service.ps1 is located
- type: .\install-service.ps1


CURRENTLY
- Getting the worker to outout to the log file AND listen for the pipe connection, see ChatGPT


Readings from 
07:54:30 [Temperature] Core (Tctl/Tdie): 51.875008
07:54:30 [Temperature] Temperature: 44


