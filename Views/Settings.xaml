<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="PowerSwitch.Views.Settings"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:PowerSwitch.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:PowerSwitch.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xaml="using:Microsoft.UI.Xaml"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBlock
            Grid.Row="0"
            Margin="10"
            Style="{ThemeResource TitleLargeTextBlockStyle}"
            Text="Settings" />

        <StackPanel x:Name="ContentArea" Grid.Row="1">
            <!--<TextBlock x:Uid="Settings_Personalization" Style="{ThemeResource SubtitleTextBlockStyle}" />-->

            <StackPanel Margin="10">
                <TextBlock Style="{ThemeResource BodyStrongTextBlockStyle}" Text="Theme" />

                <StackPanel>
                    <RadioButton
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        Content="Light"
                        FontSize="15"
                        GroupName="AppTheme"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Light</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        Content="Dark"
                        FontSize="15"
                        GroupName="AppTheme"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Dark</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        Content="Default"
                        FontSize="15"
                        GroupName="AppTheme"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Default</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                </StackPanel>

            </StackPanel>

            <StackPanel Margin="10 20 0 10">
                <TextBlock Style="{ThemeResource BodyStrongTextBlockStyle}" Text="Start when Windows starts" />

                <ToggleSwitch
                    IsOn="{x:Bind ViewModel.StartWithWindows, Mode=TwoWay}"
                    OffContent="Disabled"
                    OnContent="Enabled" />

            </StackPanel>


            <!--<TextBlock
                Margin="10 0 0 0"
                Style="{ThemeResource SubtitleTextBlockStyle}"
                Text="About" />-->

            <StackPanel Margin="10 0 0 0">

                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{ThemeResource BodyStrongTextBlockStyle}" Text="Sensors Service -" />

                    <TextBlock
                        Margin="4 0 0 0"
                        Style="{ThemeResource BodyStrongTextBlockStyle}"
                        Text="{x:Bind ViewModel.ServiceStatusText, Mode=OneWay}" />

                </StackPanel>

                <!--<Button
                    Command="{x:Bind ViewModel.StartSensorServiceCommand}"
                    Content="Start Sensor Service"
                    Visibility="{x:Bind ViewModel.ServiceIsRunning, Converter={StaticResource BoolToVisibilityConverterInvert}}" />

                <Button
                    Command="{x:Bind ViewModel.StopSensorServiceCommand}"
                    Content="Stop Sensor Service"
                    Visibility="{x:Bind ViewModel.ServiceIsRunning, Converter={StaticResource BoolToVisibilityConverter}}" />-->


            </StackPanel>


            <StackPanel Margin="10 0 0 0">

                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="v" />
                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" />
                </StackPanel>

                <!--<TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="Description" />-->
            </StackPanel>

            <StackPanel Margin="10 20 0 0">
                <TextBlock Style="{ThemeResource BodyStrongTextBlockStyle}" Text="Temperature Unit" />
                <ComboBox x:Name="TemperatureUnitComboBox"
                          SelectedItem="{x:Bind ViewModel.TemperatureUnit, Mode=TwoWay}"
                          Margin="0,4,0,0">
                    <ComboBoxItem Content="Celsius" Tag="Celsius" />
                    <ComboBoxItem Content="Fahrenheit" Tag="Fahrenheit" />
                </ComboBox>
            </StackPanel>
        </StackPanel>
    </Grid>
</Page>
